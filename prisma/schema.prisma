generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model auths {
  id            Int     @id @default(autoincrement())
  auth_login    String  @unique
  auth_password String
  users         users[]
}

model categories {
  id       Int     @id @default(autoincrement())
  category String? @default("new category") @db.VarChar(40)
}

model cuisines {
  id   Int     @id @default(autoincrement())
  name String? @db.VarChar(40)
  alt  String? @db.VarChar(20)
  icon String? @db.VarChar(20)
}

model diets {
  id   Int     @id @default(autoincrement())
  name String? @db.VarChar(40)
  alt  String? @db.VarChar(20)
  desc String?
}

model ingredients {
  id            Int      @id @default(autoincrement())
  recipe        Int?
  item          Int?
  amount        String?  @default(dbgenerated("0")) @db.VarChar(5)
  unit          String?  @default("g") @db.VarChar(10)
  list_position Int      @default(0)
  items         items?   @relation(fields: [item], references: [id], onDelete: NoAction, onUpdate: NoAction)
  recipes       recipes? @relation(fields: [recipe], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model items {
  id                                   Int           @id @default(autoincrement())
  name                                 String?       @default("new item") @db.VarChar(50)
  nutrients                            Int?
  ingredients                          ingredients[]
  nutrients_items_nutrientsTonutrients nutrients?    @relation("items_nutrientsTonutrients", fields: [nutrients], references: [id], onDelete: NoAction, onUpdate: NoAction)
  pantry                               pantry[]
}

model log {
  id      Int      @id @default(autoincrement())
  date    DateTime @default(now()) @db.Timestamp(6)
  recipe  Int?
  recipes recipes? @relation(fields: [recipe], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model nutrients {
  id                               Int      @id @default(autoincrement())
  energy                           Decimal? @default(0) @db.Decimal(6, 2)
  carbohydrates                    Decimal? @default(0) @db.Decimal(6, 2)
  protein                          Decimal? @default(0) @db.Decimal(6, 2)
  fiber                            Decimal? @default(0) @db.Decimal(6, 2)
  sugar_total                      Decimal? @default(0) @db.Decimal(6, 2)
  fat_total                        Decimal? @default(0) @db.Decimal(6, 2)
  items_items_nutrientsTonutrients items[]  @relation("items_nutrientsTonutrients")
}

model pantry {
  id     Int       @id @default(autoincrement())
  item   Int?
  exp    DateTime? @db.Timestamp(6)
  amount Int?      @default(0)
  unit   String?   @default("g") @db.VarChar(10)
  items  items?    @relation(fields: [item], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model recipes {
  id          Int           @id @default(autoincrement())
  title       String?       @default("new recipe") @db.VarChar(50)
  author      Int?
  yeald       Decimal?      @default(0) @db.Decimal
  unit        String?       @default("g") @db.VarChar(10)
  ingredients ingredients[]
  log         log[]
  users       users?        @relation(fields: [author], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id        Int       @id @default(autoincrement())
  full_name String    @default("new user") @db.VarChar(30)
  auth_id   Int?
  recipes   recipes[]
  auths     auths?    @relation(fields: [auth_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "users_fk1")
}
